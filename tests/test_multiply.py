# Generated by fallback model: openai/gpt-4o-mini
import pytest
from multiply import multiply_numbers

def test_multiply_positive_numbers():
    assert multiply_numbers(2, 3) == 6
    assert multiply_numbers(10, 5) == 50

def test_multiply_negative_numbers():
    assert multiply_numbers(-2, -3) == 6
    assert multiply_numbers(-2, 3) == -6

def test_multiply_with_zero():
    assert multiply_numbers(0, 5) == 0
    assert multiply_numbers(5, 0) == 0
    assert multiply_numbers(0, 0) == 0

def test_multiply_edge_cases():
    assert multiply_numbers(1, 1000000) == 1000000
    assert multiply_numbers(999999999999, 999999999999) == 999999999998000000000001
    assert multiply_numbers(0.1, 0.2) == 0.02
    assert multiply_numbers(-0.1, 5) == -0.5

def test_multiply_error_conditions():
    with pytest.raises(TypeError):
        multiply_numbers(None, 5)
    with pytest.raises(TypeError):
        multiply_numbers(5, "string")
    with pytest.raises(TypeError):
        multiply_numbers([1, 2], 5)
    with pytest.raises(TypeError):
        multiply_numbers(5, {1: 'a'})